---
- hosts: localhost
  connection: local
  gather_facts: yes
  vars:
    login: &login
      server_url: "{{ server_url}}"
      username: "{{ username }}"
      password: "{{ password }}"
      validate_certs: "{{ validate_certs }}"
  tasks:
  - name: Create an empty list
    set_fact:
      failed_repositories: []
      failed_repositories_product: []

  - name: Create an empty dictionary
    set_fact:
      failed_repositories_dict: {}

  - name: "Show repositories"
    redhat.satellite.resource_info:
      <<: *login
      resource: "repositories"
    register: result

  - name: "Check if result is successful and add failed repositories to the list"
    set_fact:
      #failed_repositories: "{{ failed_repositories + [item.name] }}"
      #failed_repositories_product: "{{ failed_repositories_product + [item.product.name] }}"
      #failed_repositories_dict: "{{ failed_repositories_dict | combine({item.name: item.product.name}) }}"
      failed_repositories_dict: "{{ failed_repositories_dict([]) + [{'repo_name': item.name,'product_name': item.product.name}] }}"
    when: item.last_sync.result is undefined or item.last_sync.result != "success"
    loop: "{{ result.resources }}"

  - name: "Show dictionary of failed repositories"
    debug:
      var: failed_repositories_dict

  - name: "Prepare data for the next playbook"
    set_stats:
      data:
        failed_repositories_dict_2: "{{ failed_repositories_dict }}"

  - name: "Show dictionary of failed repositories product"
    debug:
      var: repo_product
  
  - name: "Check if failed_repositories_dict is not empty"
    assert:
      that:
        - failed_repositories_dict | length == 0
      fail_msg: "There are failed repositories: {{ failed_repositories_dict }}"

  - name: Show current time in seconds
    debug:
      msg: "{{ ansible_date_time.epoch | int }}"
      verbosity: 1

  - name: Show last_sync variable time
    debug:
      var: "{{ result.resources[0].last_sync.ended_at }}"
      verbosity: 1

  - name: Show last_sync variable time in seconds
    debug:
      var: "{{ (result.resources[0].last_sync.ended_at| split | first | to_datetime('%Y-%m-%d')).strftime('%s') }}"
      verbosity: 1

  - name: "Check if ended is less than 7 days"
    assert:
      that:
        - (ansible_date_time.epoch | int) - ((item.last_sync.ended_at| split | first | to_datetime('%Y-%m-%d')).strftime('%s') | int) < 604800
      fail_msg: "The last sync ended more than 7 days ago."
    loop: "{{ result.resources }}"